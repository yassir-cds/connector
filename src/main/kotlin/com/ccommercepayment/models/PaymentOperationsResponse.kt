/**
* Payment Gateway
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: v1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package com.ccommercepayment.models

import com.ccommercepayment.models.Schedule

import com.squareup.moshi.Json
/**
 * All payment operation data for the response
 * @param orderTag The orderTag
 * @param schedules All schedules data
 * @param orderRef The orderRef
 * @param responseCode The response code of the service
 * @param actionType The action type
 * @param responseMessage The global response message
 */
data class PaymentOperationsResponse (
    /* The orderTag */
    @Json(name = "orderTag")
    val orderTag: kotlin.String? = null,
    /* All schedules data */
    @Json(name = "schedules")
    val schedules: kotlin.Array<Schedule>? = null,
    /* The orderRef */
    @Json(name = "orderRef")
    val orderRef: kotlin.String? = null,
    /* The response code of the service */
    @Json(name = "responseCode")
    val responseCode: PaymentOperationsResponse.ResponseCode? = null,
    /* The action type */
    @Json(name = "actionType")
    val actionType: kotlin.String? = null,
    /* The global response message */
    @Json(name = "responseMessage")
    val responseMessage: kotlin.String? = null
) {

    /**
    * The response code of the service
    * Values: undetermined,success,refused,refusedByBank,internalFailure,pending,unavailable
    */
    enum class ResponseCode(val value: kotlin.String){
    
        @Json(name = "undetermined")
        undetermined("undetermined"),
    
        @Json(name = "success")
        success("success"),
    
        @Json(name = "refused")
        refused("refused"),
    
        @Json(name = "refusedByBank")
        refusedByBank("refusedByBank"),
    
        @Json(name = "internalFailure")
        internalFailure("internalFailure"),
    
        @Json(name = "pending")
        pending("pending"),
    
        @Json(name = "unavailable")
        unavailable("unavailable");
    
    }

}

