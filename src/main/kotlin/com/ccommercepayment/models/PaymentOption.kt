/**
* Payment Gateway
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: v1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package com.ccommercepayment.models

import com.ccommercepayment.models.AcquiringBank
import com.ccommercepayment.models.LoanOffer
import com.ccommercepayment.models.PaymentCard
import com.ccommercepayment.models.PaymentFee
import com.ccommercepayment.models.PaymentScheduleRule

import com.squareup.moshi.Json
/**
 * All payment option data
 * @param paymentOptionRef The payment option reference
 * @param name The payment option name
 * @param active Indicates if the payment option is active or not
 * @param minAmount The minimum amount allowed
 * @param maxAmount The maximum amount allowed
 * @param storedCardsEnabled Indicates if stored cards are enabled or not
 * @param paymentScheduleRules All payment schedule rules data
 * @param paymentFees All payment fees data
 * @param paymentCards All payment cards data
 * @param loanOffers All loan offers data
 * @param acquiringBanks All acquiring banks data
 */
data class PaymentOption (
    /* The payment option reference */
    @Json(name = "paymentOptionRef")
    val paymentOptionRef: kotlin.String? = null,
    /* The payment option name */
    @Json(name = "name")
    val name: kotlin.String? = null,
    /* Indicates if the payment option is active or not */
    @Json(name = "active")
    val active: kotlin.Boolean? = null,
    /* The minimum amount allowed */
    @Json(name = "minAmount")
    val minAmount: kotlin.Long? = null,
    /* The maximum amount allowed */
    @Json(name = "maxAmount")
    val maxAmount: kotlin.Long? = null,
    /* Indicates if stored cards are enabled or not */
    @Json(name = "storedCardsEnabled")
    val storedCardsEnabled: kotlin.Boolean? = null,
    /* All payment schedule rules data */
    @Json(name = "paymentScheduleRules")
    val paymentScheduleRules: kotlin.Array<PaymentScheduleRule>? = null,
    /* All payment fees data */
    @Json(name = "paymentFees")
    val paymentFees: kotlin.Array<PaymentFee>? = null,
    /* All payment cards data */
    @Json(name = "paymentCards")
    val paymentCards: kotlin.Array<PaymentCard>? = null,
    /* All loan offers data */
    @Json(name = "loanOffers")
    val loanOffers: kotlin.Array<LoanOffer>? = null,
    /* All acquiring banks data */
    @Json(name = "acquiringBanks")
    val acquiringBanks: kotlin.Array<AcquiringBank>? = null
) {

}

